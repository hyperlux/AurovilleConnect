# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name auroville.social api.auroville.social;
    return 301 https://$server_name$request_uri;
}

# Frontend server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name auroville.social;

    ssl_certificate /etc/letsencrypt/live/auroville.social/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/auroville.social/privkey.pem;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    root /usr/share/nginx/html;
    index index.html;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    # PWA files
    location /manifest.json {
        add_header Cache-Control "public, max-age=0";
        add_header Content-Type "application/json";
        try_files $uri =404;
    }

    location /service-worker.js {
        add_header Cache-Control "public, max-age=0";
        add_header Content-Type "application/javascript";
        try_files $uri =404;
    }

    # Static files
    location /static {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle SPA routing
    location / {
        try_files $uri $uri/ /index.html;
    }
}

# API server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name api.auroville.social;

    ssl_certificate /etc/letsencrypt/live/auroville.social/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/auroville.social/privkey.pem;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    access_log /var/log/nginx/api_access.log combined;
    error_log /var/log/nginx/api_error.log debug;

    # Health check location
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
    }

    # CORS configuration map
    map $request_method $cors_method {
        OPTIONS 11;
        default 1;
    }

    # API locations
    location / {
        limit_except GET POST PUT DELETE OPTIONS {
            deny all;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://auroville.social';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' 'https://auroville.social' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 400 401 403 404 500 502 503 504 = @error_handler;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Error handler location
    location @error_handler {
        add_header 'Access-Control-Allow-Origin' 'https://auroville.social' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        default_type application/json;
        return 500 '{"error": "Internal Server Error", "status": 500}';
    }
}