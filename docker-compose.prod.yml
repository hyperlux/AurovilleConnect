version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      - VITE_API_URL=https://auroville.social/api
      - VITE_APP_URL=https://auroville.social
      - NODE_ENV=production
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - auroville-network

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/auroville
      - NODE_ENV=production
      - JWT_SECRET=72jmcBa8LYTi7szZp1Lw9+GmKuEXp76og8B1FyySqOg8f3a5d2e1c4b7
      - PORT=5000
      - HOST=0.0.0.0
      - CORS_ORIGIN=https://auroville.social
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    networks:
      - auroville-network

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auroville
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d auroville"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auroville-network

networks:
  auroville-network:
    driver: bridge

volumes:
  postgres_data: