services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    image: auroville/frontend
    environment:
      - NODE_ENV=production
      - VITE_API_URL=https://api.auroville.social
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks:
      - app_network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    image: auroville/backend
    environment:
      - NODE_ENV=production
      - PORT=5000
      - CORS_ORIGIN=https://auroville.social
      - API_URL=https://api.auroville.social
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/auroville
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FRONTEND_URL=https://auroville.social
    ports:
      - "5000:5000"
    depends_on:
      - db
    restart: unless-stopped
    volumes:
      - ./server/prisma:/app/prisma
      - ./uploads:/app/uploads
    networks:
      - app_network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=auroville
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: 