# Build stage
FROM node:18-alpine as build

WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .
RUN npm run build

# Production stage
FROM nginx:alpine

# Copy built assets
COPY --from=build /app/dist /usr/share/nginx/html

# Create public directory
RUN mkdir -p /usr/share/nginx/html/public

# Copy only existing logo files
COPY --from=build /app/public/logodark.png /usr/share/nginx/html/public/logodark.png || true
COPY --from=build /app/public/logolight.png /usr/share/nginx/html/public/logolight.png || true
COPY --from=build /app/public/banyan.jpg /usr/share/nginx/html/public/banyan.jpg || true
COPY --from=build /app/public/firematri.png /usr/share/nginx/html/public/firematri.png || true
COPY --from=build /app/public/matrimandirimg.png /usr/share/nginx/html/public/matrimandirimg.png || true

# Create empty favicon if it doesn't exist
RUN touch /usr/share/nginx/html/favicon.ico

# Copy PWA files if they exist
COPY --from=build /app/public/manifest.json /usr/share/nginx/html/manifest.json || true
COPY --from=build /app/public/service-worker.js /usr/share/nginx/html/service-worker.js || true

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"] 